"""autogenerated by genmsg_py from wheel_pid_gains.msg. Do not edit."""
import roslib.message
import struct


class wheel_pid_gains(roslib.message.Message):
  _md5sum = "8b36c5f634f05b04228ec941330c2385"
  _type = "i2c_net_packets/wheel_pid_gains"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """uint8 dstaddr

float32 p0
float32 i0
float32 d0
float32 p1
float32 i1
float32 d1
bool rev0
bool rev1

"""
  __slots__ = ['dstaddr','p0','i0','d0','p1','i1','d1','rev0','rev1']
  _slot_types = ['uint8','float32','float32','float32','float32','float32','float32','bool','bool']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.
    
    The available fields are:
       dstaddr,p0,i0,d0,p1,i1,d1,rev0,rev1
    
    @param args: complete set of field values, in .msg order
    @param kwds: use keyword arguments corresponding to message field names
    to set specific fields. 
    """
    if args or kwds:
      super(wheel_pid_gains, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.dstaddr is None:
        self.dstaddr = 0
      if self.p0 is None:
        self.p0 = 0.
      if self.i0 is None:
        self.i0 = 0.
      if self.d0 is None:
        self.d0 = 0.
      if self.p1 is None:
        self.p1 = 0.
      if self.i1 is None:
        self.i1 = 0.
      if self.d1 is None:
        self.d1 = 0.
      if self.rev0 is None:
        self.rev0 = False
      if self.rev1 is None:
        self.rev1 = False
    else:
      self.dstaddr = 0
      self.p0 = 0.
      self.i0 = 0.
      self.d0 = 0.
      self.p1 = 0.
      self.i1 = 0.
      self.d1 = 0.
      self.rev0 = False
      self.rev1 = False

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    @param buff: buffer
    @type  buff: StringIO
    """
    try:
      _x = self
      buff.write(_struct_B6f2B.pack(_x.dstaddr, _x.p0, _x.i0, _x.d0, _x.p1, _x.i1, _x.d1, _x.rev0, _x.rev1))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    @param str: byte array of serialized message
    @type  str: str
    """
    try:
      end = 0
      _x = self
      start = end
      end += 27
      (_x.dstaddr, _x.p0, _x.i0, _x.d0, _x.p1, _x.i1, _x.d1, _x.rev0, _x.rev1,) = _struct_B6f2B.unpack(str[start:end])
      self.rev0 = bool(self.rev0)
      self.rev1 = bool(self.rev1)
      return self
    except struct.error as e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    @param buff: buffer
    @type  buff: StringIO
    @param numpy: numpy python module
    @type  numpy module
    """
    try:
      _x = self
      buff.write(_struct_B6f2B.pack(_x.dstaddr, _x.p0, _x.i0, _x.d0, _x.p1, _x.i1, _x.d1, _x.rev0, _x.rev1))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    @param str: byte array of serialized message
    @type  str: str
    @param numpy: numpy python module
    @type  numpy: module
    """
    try:
      end = 0
      _x = self
      start = end
      end += 27
      (_x.dstaddr, _x.p0, _x.i0, _x.d0, _x.p1, _x.i1, _x.d1, _x.rev0, _x.rev1,) = _struct_B6f2B.unpack(str[start:end])
      self.rev0 = bool(self.rev0)
      self.rev1 = bool(self.rev1)
      return self
    except struct.error as e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

_struct_I = roslib.message.struct_I
_struct_B6f2B = struct.Struct("<B6f2B")
