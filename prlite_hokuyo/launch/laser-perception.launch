<launch>

  <!-- set laser tilt rate 
  <node pkg="pr2_mechanism_controllers" type="send_periodic_cmd_srv.py" name="laser_tilt_controller_3dnav_params" args="laser_tilt_controller linear 3 .75 .25" />-->

    <node name="laser_action" pkg="prlite_hokuyo" type="hokuyo_laser_action.py" output="screen">
        <remap from="/laser_tilt_controller/state" to="/laser_tilt_controller/state_pr2_msgs"/>
    </node>
  
  <!-- convert tilt laser scan to pointcloud -->
  <node pkg="laser_filters" type="scan_to_cloud_filter_chain" output="screen" name="scan_to_cloud_filter_chain_tilt_laser">
    <remap from="scan" to="tilt_scan"/>
    <remap from="cloud_filtered" to="tilt_scan_cloud"/>
    <param name="target_frame" type="string" value="base_link"/>
<!--
    <rosparam command="load" file="$(find prmini_arm_navigation)/config/shadow_filter.yaml" />
-->
  </node>

  <!-- I've removed the planning_environment::laser_clear_objects node from here -->

<!--
  <node pkg="robot_self_filter" type="self_filter" respawn="true" name="tilt_laser_self_filter" output="screen">
    <remap from="cloud_in" to="tilt_scan_cloud" />
    <remap from="cloud_out" to="tilt_scan_cloud_filtered" />
    <param name="sensor_frame" type="string" value="laser_tilt_mount_link" />

    <param name="min_sensor_dist" type="double" value=".05"/>
    <param name="self_see_default_padding" type="double" value=".03"/>
    <param name="self_see_default_scale" type="double" value="1.0"/>
  </node>
-->

  <!-- assemble pointcloud into a full world view -->
  <node pkg="laser_assembler" type="point_cloud_assembler" output="screen"  name="point_cloud_assembler">
    <remap from="cloud" to="tilt_scan_cloud_filtered"/>
    <param name="tf_cache_time_secs" type="double" value="10.0" />
    <param name="tf_tolerance_secs" type="double" value="0.0" />
    <param name="max_clouds" type="int" value="400" />
    <param name="ignore_laser_skew" type="bool" value="true" />
    <param name="fixed_frame" type="string" value="base_link" />
  </node>

  <!-- make snapshots whenever laser reaches the top or bottom of a nod -->
<!--
  <node pkg="pr2_arm_navigation_perception" type="pr2_laser_snapshotter" output="screen" name="snapshotter">
    <remap from="laser_scanner_signal" to="laser_tilt_controller/laser_scanner_signal"/>
    <remap from="build_cloud" to="point_cloud_assembler/build_cloud" />
    <remap from="full_cloud" to="full_cloud_filtered" />
  </node>
-->

  <!-- make point cloud snapshots into collision maps -->
<!--
  <node pkg="collision_map" type="collision_map_self_occ_node" name="collision_map_self_occ_node" respawn="true" output="screen">
-->
    
    <!-- The default padding to be added for the body parts the robot can see -->
<!--
    <param name="self_see_default_padding" type="double" value="0.02" />
-->
    
    <!-- The default scaling to be added for the body parts the robot can see -->
<!--
    <param name="self_see_default_scale" type="double" value="1.0" />
-->
     
    <!-- if someone asks for a stable map, publish the static map on the dynamic
    map topic and no longer publish dynamic maps -->
<!--
    <param name="publish_static_over_dynamic_map" type="bool" value="true" />
    <param name="fixed_frame" type="string" value="base_link" />
-->

    <!-- define a box of size 2x3x4 around (1.1,  0, 0) in the robot frame -->
<!--
    <param name="robot_frame" type="string" value="base_link" />

    <param name="origin_x" type="double" value="1.1" />
    <param name="origin_y" type="double" value="0.0" />
    <param name="origin_z" type="double" value="0.0" />
    

    <param name="dimension_x" type="double" value="1.0" />
    <param name="dimension_y" type="double" value="1.5" />
    <param name="dimension_z" type="double" value="2.0" />
-->

    <!-- set the resolution (1.0 cm) -->
<!--
    <param name="resolution" type="double" value="0.01" />
-->
    
    <!-- cloud sources -->
<!--
    <rosparam command="load" file="$(find prmini_arm_navigation)/config/collision_map_sources.yaml" />   
  </node>
-->

</launch>
